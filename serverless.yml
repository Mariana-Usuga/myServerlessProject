org: marianausuga21
app: myserverlessproject


service: myserverlessproject

frameworkVersion: '3'

provider:
  name: aws
  runtime: nodejs12.x
  profile: dev_usuga
  region: us-east-1
  iamRolesStatements:
    - Effect: Allow
      Action: 
        - dynamodb:*
      Resource: 
        - arn:aws:dynamodb:us-east-1:004175726938:table/TaskTable
  apiGateway: 
    shouldStarNameWithService: true


plugins: 
  - serverless-s3-sync
  - serverless-offline

custom:
   s3Sync: 
     -bucketName: myserverlessprojectuploadbucket-789
     localDir: Uploadload

functions:
  hello:
    handler: src/handler.hello
  createTask: 
    handler: src/createTask.createTask
    events:
      - http:
          method: GET
          path: /user/{name}
          cors: true
  helloUser: 
    handler: handler.helloUser
    events:
      - http:
          method: GET
          path: /user/{name}
          cors: true
  createUser: 
    handler: src/handler.createUser
    events:
      - http:
          method: POST
          path: /user
          cors: true
  getUser: 
    handler: lambdas/getUser.handler
    events:
      - http:
          method: GET
          path: /get-user/{ID}
          cors: true
          
resources: 
  Resources:
    TaskTable: 
      Type: AWS::DynamoDB::Table
      Properties: 
        TableName: TaskTable
        BillingMode: PAY_PER_REQUEST
        AttributeDefinitions:
        - AttributeName: id
          AttributeType: S
        KeySchema:
        - AttributeName: id
          KeyType: HASH
                
    DemoBucketUpload: 
      Type: AWS::S3::Bucket
      Properties: 
         BucketName: myserverlessprojectuploadbucket-789
